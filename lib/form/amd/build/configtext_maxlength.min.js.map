{"version":3,"sources":["../src/configtext_maxlength.js"],"names":["registered","init","document","addEventListener","e","maxLengthField","target","closest","dataset","validationFailureId","validationMessage","getElementById","parentElement","remove","value","length","validationMaxLength","form","submissionCheck","then","errorMessage","Templates","renderForPromise","field","id","message","errorTemplate","formWrapper","prependNodeContents","html","js","setAttribute","errorField","catch","Notification","exception","removeAttribute","maxLengthFields","querySelectorAll","maxLengthFieldsArray","Array","from","some","preventDefault","focus"],"mappings":"6KAuBA,uD,GAEIA,CAAAA,CAAU,G,CACDC,CAAI,CAAG,UAAM,CACtB,GAAID,CAAJ,CAAgB,CACZ,MACH,CACDA,CAAU,GAAV,CAEAE,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAoC,SAAAC,CAAC,CAAI,CACrC,GAAMC,CAAAA,CAAc,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,8BAAjB,CAAvB,CACA,GAAI,CAACF,CAAL,CAAqB,CACjB,MACH,CAED,GAAIA,CAAc,CAACG,OAAf,CAAuBC,mBAA3B,CAAgD,CAE5C,GAAMC,CAAAA,CAAiB,CAAGR,QAAQ,CAACS,cAAT,CAAwBN,CAAc,CAACG,OAAf,CAAuBC,mBAA/C,CAA1B,CACAC,CAAiB,CAACE,aAAlB,CAAgCC,MAAhC,EACH,CAED,GAAIR,CAAc,CAACS,KAAf,CAAqBC,MAArB,CAA8BV,CAAc,CAACG,OAAf,CAAuBQ,mBAAzD,CAA8E,CAE1EX,CAAc,CAACY,IAAf,CAAoBd,gBAApB,CAAqC,QAArC,CAA+Ce,CAA/C,EAEA,iBAAU,cAAV,CAA0B,MAA1B,CAAkCb,CAAc,CAACG,OAAf,CAAuBQ,mBAAzD,EAA8EG,IAA9E,CAAmF,SAAAC,CAAY,CAAI,CAC3F,MAAOC,WAAUC,gBAAV,CAA2B,sCAA3B,CAAmE,CACtEC,KAAK,CAAElB,CAAc,CAACmB,EADgD,CAEtEC,OAAO,CAAEL,CAF6D,CAAnE,CAIV,CALL,EAKOD,IALP,CAKY,SAAAO,CAAa,CAAI,CACrB,GAAMC,CAAAA,CAAW,CAAGtB,CAAc,CAACE,OAAf,CAAuB,YAAvB,CAApB,CACAc,UAAUO,mBAAV,CAA8BD,CAA9B,CACIN,UAAUO,mBAAV,CAA8BvB,CAA9B,CAA8CqB,CAAa,CAACG,IAA5D,CAAkEH,CAAa,CAACI,EAAhF,CADJ,CACyFJ,CAAa,CAACI,EADvG,EAEAzB,CAAc,CAACG,OAAf,CAAuBC,mBAAvB,CAA6C,mBAAqBJ,CAAc,CAACmB,EAAjF,CACA,MAAOE,CAAAA,CACV,CAXL,EAWOP,IAXP,CAWY,UAAM,CACVd,CAAc,CAAC0B,YAAf,CAA4B,cAA5B,KACA,GAAMC,CAAAA,CAAU,CAAG9B,QAAQ,CAACS,cAAT,CAAwBN,CAAc,CAACG,OAAf,CAAuBC,mBAA/C,CAAnB,CACAuB,CAAU,CAACD,YAAX,CAAwB,kBAAxB,CAA4C1B,CAAc,CAACmB,EAA3D,CAEH,CAhBL,EAgBOS,KAhBP,CAgBaC,YAAY,CAACC,SAhB1B,CAiBH,CArBD,IAqBO,CACH,MAAO9B,CAAAA,CAAc,CAACG,OAAf,CAAuBC,mBAA9B,CACAJ,CAAc,CAAC+B,eAAf,CAA+B,cAA/B,CACH,CACJ,CArCD,CAsCH,C,UAED,GAAMlB,CAAAA,CAAe,CAAG,SAAAd,CAAC,CAAI,IACnBiC,CAAAA,CAAe,CAAGjC,CAAC,CAACE,MAAF,CAASgC,gBAAT,CAA0B,8BAA1B,CADC,CAEnBC,CAAoB,CAAGC,KAAK,CAACC,IAAN,CAAWJ,CAAX,CAFJ,CAGzBE,CAAoB,CAACG,IAArB,CAA0B,SAAArC,CAAc,CAAI,CAExC,GAAIA,CAAc,CAACS,KAAf,CAAqBC,MAArB,CAA8BV,CAAc,CAACG,OAAf,CAAuBQ,mBAAzD,CAA8E,CAC1EZ,CAAC,CAACuC,cAAF,GACAtC,CAAc,CAACuC,KAAf,GACA,QACH,CACD,QACH,CARD,CASH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Validation for configtext_maxlength.\n *\n * @module     core_form/configtext-maxlength\n * @package    core\n * @copyright  2021 The Open University\n **/\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\n\nlet registered = false;\nexport const init = () => {\n    if (registered) {\n        return;\n    }\n    registered = true;\n\n    document.addEventListener('change', e => {\n        const maxLengthField = e.target.closest('[data-validation-max-length]');\n        if (!maxLengthField) {\n            return;\n        }\n\n        if (maxLengthField.dataset.validationFailureId) {\n            // Remove the old message.\n            const validationMessage = document.getElementById(maxLengthField.dataset.validationFailureId);\n            validationMessage.parentElement.remove();\n        }\n\n        if (maxLengthField.value.length > maxLengthField.dataset.validationMaxLength) {\n            // Disable the form for this field.\n            maxLengthField.form.addEventListener('submit', submissionCheck);\n            // Display an error.\n            getString('maximumchars', 'core', maxLengthField.dataset.validationMaxLength).then(errorMessage => {\n                    return Templates.renderForPromise('core_form/setting_validation_failure', {\n                        field: maxLengthField.id,\n                        message: errorMessage,\n                    });\n                }).then(errorTemplate => {\n                    const formWrapper = maxLengthField.closest('.form-text');\n                    Templates.prependNodeContents(formWrapper,\n                        Templates.prependNodeContents(maxLengthField, errorTemplate.html, errorTemplate.js), errorTemplate.js);\n                    maxLengthField.dataset.validationFailureId = 'maxlength_error_' + maxLengthField.id;\n                    return errorTemplate;\n                }).then(() => {\n                    maxLengthField.setAttribute('aria-invalid', true);\n                    const errorField = document.getElementById(maxLengthField.dataset.validationFailureId);\n                    errorField.setAttribute('aria-describedby', maxLengthField.id);\n                    return;\n                }).catch(Notification.exception);\n        } else {\n            delete maxLengthField.dataset.validationFailureId;\n            maxLengthField.removeAttribute('aria-invalid');\n        }\n    });\n};\n\nconst submissionCheck = e => {\n    const maxLengthFields = e.target.querySelectorAll('[data-validation-max-length]');\n    const maxLengthFieldsArray = Array.from(maxLengthFields);\n    maxLengthFieldsArray.some(maxLengthField => {\n        // Focus on the first validation failure.\n        if (maxLengthField.value.length > maxLengthField.dataset.validationMaxLength) {\n            e.preventDefault();\n            maxLengthField.focus();\n            return true;\n        }\n        return false;\n    });\n};\n"],"file":"configtext_maxlength.min.js"}