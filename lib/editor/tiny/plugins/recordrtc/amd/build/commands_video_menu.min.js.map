{"version":3,"file":"commands_video_menu.min.js","sources":["../src/commands_video_menu.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Record RTC - record base command.\n *\n * @module      tiny_recordrtc/commands\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getString} from 'core/str';\nimport {getButtonImage as getVideoIcon} from 'editor_tiny/utils';\nimport {\n    videoButtonName,\n    screenButtonName,\n    videoMenuButtonName,\n    component,\n} from './common';\nimport {isVideoAllowed, isScreenAllowed} from './options';\n\nexport default async() => {\n    const [\n        videorecordmenutitle,\n        buttonImage,\n    ] = await Promise.all([\n        getString('videorecordmenutitle', component),\n        getVideoIcon('video', component),\n    ]);\n\n    return (editor) => {\n        if (!isVideoAllowed(editor) && !isScreenAllowed(editor)) {\n            return;\n        }\n\n        const icon = 'video';\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        editor.ui.registry.addMenuButton(videoMenuButtonName, {\n            icon,\n            tooltip: videorecordmenutitle,\n            fetch: callback => callback(`${videoButtonName} ${screenButtonName}`),\n        });\n    };\n};\n"],"names":["async","videorecordmenutitle","buttonImage","Promise","all","component","editor","ui","registry","addIcon","html","addMenuButton","videoMenuButtonName","icon","tooltip","fetch","callback","videoButtonName","screenButtonName"],"mappings":"uQAiCeA,gBAEPC,qBACAC,mBACMC,QAAQC,IAAI,EAClB,kBAAU,uBAAwBC,oBAClC,yBAAa,QAASA,4BAGlBC,cACC,2BAAeA,WAAY,4BAAgBA,eAKhDA,OAAOC,GAAGC,SAASC,QADN,QACoBP,YAAYQ,MAE7CJ,OAAOC,GAAGC,SAASG,cAAcC,4BAAqB,CAClDC,KAJS,QAKTC,QAASb,qBACTc,MAAOC,UAAYA,mBAAYC,oCAAmBC"}