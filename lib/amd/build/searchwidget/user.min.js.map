{"version":3,"file":"user.min.js","sources":["../../src/searchwidget/user.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allow the user to search for learners within the grader report.\n *\n * @module    core/searchwidget/user\n * @copyright 2023 Mathew May <mathew.solutions>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport UserSearch from 'core_user/comboboxsearch/user';\nimport Url from 'core/url';\nimport * as Repository from 'core/searchwidget/repository';\n\nexport default class User extends UserSearch {\n\n    static extraParams;\n    constructor() {\n        super();\n    }\n\n    static init(extraParams = null) {\n        User.extraParams = extraParams;\n        return new User();\n    }\n\n    /**\n     * Get the data we will be searching against in this component.\n     *\n     * @returns {Promise<*>}\n     */\n    fetchDataset() {\n        if (User.extraParams.reportmode === 'grade') {\n            return Repository.userFetch({courseid: User.extraParams.courseid},\n                User.extraParams.service).then((r) => r.users);\n        }\n\n        let params = {\n            cmid: User.extraParams.cmid,\n            mode: User.extraParams.reportmode,\n            class: User.extraParams.tableclass,\n            optionclass: User.extraParams.optionclass,\n            attempts: User.extraParams?.params?.attempts ?? \"\",\n            states: User.extraParams?.params?.states ?? \"\",\n            onlygraded: !!User.extraParams?.params?.onlygraded ?? false,\n        };\n\n        return Repository.userFetch(params,\n            User.extraParams.service).then((r) => r.users);\n    }\n\n    /**\n     * Build up the view all link.\n     *\n     * @returns {string|*}s\n     */\n    selectAllResultsLink() {\n        return Url.relativeUrl(User.extraParams.path, {\n            ...User.extraParams.params,\n            gpr_search: this.getSearchTerm(),\n        }, false);\n    }\n\n    /**\n     * Build up the view all link that is dedicated to a particular result.\n     *\n     * @param {Number} userID The ID of the user selected.\n     * @returns {string|*}\n     */\n    selectOneLink(userID) {\n        return Url.relativeUrl(User.extraParams.path, {\n            ...User.extraParams.params,\n            gpr_search: this.getSearchTerm(),\n            gpr_userid: userID,\n        }, false);\n    }\n}\n"],"names":["User","UserSearch","constructor","extraParams","fetchDataset","reportmode","Repository","userFetch","courseid","service","then","r","users","params","cmid","mode","class","tableclass","optionclass","attempts","_User$extraParams","_User$extraParams$par2","states","_User$extraParams2","_User$extraParams2$pa","onlygraded","_User$extraParams3","_User$extraParams3$pa","selectAllResultsLink","Url","relativeUrl","path","gpr_search","this","getSearchTerm","selectOneLink","userID","gpr_userid"],"mappings":"q0CA0BqBA,aAAaC,cAG9BC,wCAIYC,mEAAc,YACtBH,KAAKG,YAAcA,YACZ,IAAIH,KAQfI,qNACwC,UAAhCJ,KAAKG,YAAYE,kBACVC,WAAWC,UAAU,CAACC,SAAUR,KAAKG,YAAYK,UACpDR,KAAKG,YAAYM,SAASC,MAAMC,GAAMA,EAAEC,YAG5CC,OAAS,CACTC,KAAMd,KAAKG,YAAYW,KACvBC,KAAMf,KAAKG,YAAYE,WACvBW,MAAOhB,KAAKG,YAAYc,WACxBC,YAAalB,KAAKG,YAAYe,YAC9BC,iEAAUnB,KAAKG,yEAALiB,kBAAkBP,gDAAlBQ,uBAA0BF,gEAAY,GAChDG,iEAAQtB,KAAKG,yEAALoB,mBAAkBV,+CAAlBW,sBAA0BF,gEAAU,GAC5CG,uEAAczB,KAAKG,yEAALuB,mBAAkBb,0CAAlBc,sBAA0BF,8EAGrCnB,WAAWC,UAAUM,OACxBb,KAAKG,YAAYM,SAASC,MAAMC,GAAMA,EAAEC,QAQhDgB,8BACWC,aAAIC,YAAY9B,KAAKG,YAAY4B,KAAM,IACvC/B,KAAKG,YAAYU,OACpBmB,WAAYC,KAAKC,kBAClB,GASPC,cAAcC,eACHP,aAAIC,YAAY9B,KAAKG,YAAY4B,KAAM,IACvC/B,KAAKG,YAAYU,OACpBmB,WAAYC,KAAKC,gBACjBG,WAAYD,SACb,0FA5DUpC"}