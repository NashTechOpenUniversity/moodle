{"version":3,"file":"group.min.js","sources":["../../src/comboboxsearch/group.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allow the user to search for groups within the grader report.\n *\n * @module    core/comboboxsearch/group\n * @copyright 2023 Mathew May <mathew.solutions>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @deprecated since Moodle 4.5 - please use core_course/actionbar/group instead.\n * @todo       Final deprecation in Moodle 6.0. See MDL-82116.\n */\nimport GroupSearch from 'core_group/comboboxsearch/group';\nimport {groupFetch} from 'core_group/comboboxsearch/repository';\nimport Url from 'core/url';\n\nexport default class Group extends GroupSearch {\n\n    courseID;\n    static extraParams;\n\n    constructor() {\n        window.console.warn(\n            'The gradereport_grader/group module has been deprecated since Moodle 4.5.' +\n            ' Please use core_course/actionbar/group instead.',\n        );\n\n        super();\n\n        // Define our standard lookups.\n        this.selectors = {...this.selectors,\n            courseid: '[data-region=\"courseid\"]',\n        };\n        const component = document.querySelector(this.componentSelector());\n        this.courseID = component.querySelector(this.selectors.courseid).dataset.courseid;\n    }\n\n    static init(extraParams = null) {\n        Group.extraParams = extraParams;\n        return new Group();\n    }\n\n    /**\n     * Build up the link that is dedicated to a particular result.\n     *\n     * @param {Number} groupID The ID of the group selected.\n     * @returns {string|*}\n     */\n    selectOneLink(groupID) {\n        const params = {\n            ...Group.extraParams.params,\n            groupsearchvalue: this.getSearchTerm(),\n            group: groupID,\n        };\n\n        return Url.relativeUrl(Group.extraParams.path, params, false);\n    }\n\n    /**\n     * Get the data we will be searching against in this component.\n     *\n     * @returns {Promise<*>}\n     */\n    async fetchDataset() {\n        return await groupFetch(this.courseID, Group?.extraParams?.cmid ?? null).then((r) => r.groups);\n    }\n}\n"],"names":["Group","GroupSearch","constructor","window","console","warn","selectors","this","courseid","component","document","querySelector","componentSelector","courseID","dataset","extraParams","selectOneLink","groupID","params","groupsearchvalue","getSearchTerm","group","Url","relativeUrl","path","_Group$extraParams","cmid","then","r","groups"],"mappings":"mkBA4BqBA,cAAcC,eAK/BC,cACIC,OAAOC,QAAQC,KACX,kLAOCC,UAAY,IAAIC,KAAKD,UACtBE,SAAU,kCAERC,UAAYC,SAASC,cAAcJ,KAAKK,0BACzCC,SAAWJ,UAAUE,cAAcJ,KAAKD,UAAUE,UAAUM,QAAQN,2BAGjEO,mEAAc,YACtBf,MAAMe,YAAcA,YACb,IAAIf,MASfgB,cAAcC,eACJC,OAAS,IACRlB,MAAMe,YAAYG,OACrBC,iBAAkBZ,KAAKa,gBACvBC,MAAOJ,gBAGJK,aAAIC,YAAYvB,MAAMe,YAAYS,KAAMN,QAAQ,kFAS1C,0BAAWX,KAAKM,uCAAUb,MAAAA,kCAAAA,MAAOe,iDAAPU,mBAAoBC,4DAAQ,MAAMC,MAAMC,GAAMA,EAAEC,wDAhD1E7B"}