define("mod_quiz/dragdrop/dragdrop_utils",["exports","core/modal","core/str","core/prefetch","core/modal_events","core/notification"],(function(_exports,_modal,_str,_prefetch,_modal_events,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * JavaScript for util function for drag drop.
   *
   * @module    mod_quiz/dragdrop/dragdrop_utils
   * @copyright 2024 The Open University
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.dragdropUtils=void 0,_modal=_interopRequireDefault(_modal),_prefetch=_interopRequireDefault(_prefetch),_modal_events=_interopRequireDefault(_modal_events),_notification=_interopRequireDefault(_notification),_prefetch.default.prefetchStrings("quiz",["dragtoafter","movecontent"]);const dragdropUtils={buildListItem:async function(dropTargetElement,currentPosition){const ul=document.createElement("ul");ul.setAttribute("class","dragdrop-keyboard-drag");const utils=this,promises=[];return dropTargetElement.forEach(((e,index)=>{if(index!==currentPosition&&currentPosition!==index+1){const promise=async function(){const listLink=document.createElement("a"),listItem=document.createElement("li");listLink.textContent=await(0,_str.get_string)("dragtoafter","mod_quiz",utils.getNodeText(e)),listLink.setAttribute("role","button"),listLink.setAttribute("tabindex","0"),listLink.setAttribute("data-dropzoneid",e.id),listItem.appendChild(listLink),ul.appendChild(listItem)}();promises.push(promise)}else ul.setAttribute("data-dragitemid",e.id)})),await Promise.all(promises),ul},handleDragDropModal:async function(listItem,e,dragDropElementList,container){const modal=await _modal.default.create({title:(0,_str.get_string)("movecontent","moodle",this.getNodeText(e.target.closest("li.slot"))),body:listItem.outerHTML,footer:"",show:!0,removeOnClose:!0}),utils=this,root=modal.getRoot();root.on(_modal_events.default.shown,(function(){root[0].querySelector("a").focus();root[0].querySelectorAll("a").forEach((link=>{link.addEventListener("click",(function(event){utils.handleDragDropEvent(event,container,dragDropElementList),modal.destroy()})),link.addEventListener("keydown",(event=>{"Enter"!==event.key&&" "!==event.key||(utils.handleDragDropEvent(event,container,dragDropElementList),modal.destroy())}))}))}))},handleMoveAction:function(event,container,dragDropElementList){const dropParent=event.target.closest(".dropready"),dropTargetElement=document.querySelectorAll("ul.section li"),currentPosition=Array.from(dropTargetElement).map((item=>item.id)).indexOf(dropParent.id);this.buildListItem(dropTargetElement,currentPosition).then((listItem=>(this.handleDragDropModal(listItem,event,dragDropElementList,container),!0))).catch(_notification.default.exception)},handleDragDropEvent:function(event,container,dragDropElementList){const dropZoneNode=container.getElement("#"+event.target.dataset.dropzoneid),dragDropNodeId=event.target.closest("ul").dataset.dragitemid;dragDropElementList.forEach((dragItem=>dragItem.id===dragDropNodeId&&(dropZoneNode.dataset.moveafter=!0,dragItem.reactive.dispatch("moveQuestion",dragItem.getDraggableData(),dropZoneNode),dropZoneNode.dataset.moveafter="",!0)))},getNodeText:function(node){let text="";if(text=node.getAttribute("aria-label")||"",text.length>0)return text;const labelledByNodeId=node.getAttribute("aria-labelledby");if(labelledByNodeId){const labelNode=document.getElementById(labelledByNodeId);if(labelNode&&labelNode.textContent.trim().length>0)return labelNode.textContent.trim()}return node.querySelectorAll("h2, h3, h4, h5, span:not(.actions):not(.menu-action-text), p, div.no-overflow, div.dimmed_text").forEach((function(node){if(""===text){const nodeText=node.textContent.trim();""!==nodeText&&(text=nodeText)}})),""!==text?text:""}};_exports.dragdropUtils=dragdropUtils}));

//# sourceMappingURL=dragdrop_utils.min.js.map