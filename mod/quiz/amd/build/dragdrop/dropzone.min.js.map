{"version":3,"file":"dropzone.min.js","sources":["../../src/dragdrop/dropzone.js"],"sourcesContent":["import {BaseComponent, DragDrop} from 'core/reactive';\nimport Selectors from 'mod_quiz/dragdrop/selectors';\n\nexport default class extends BaseComponent {\n    /**\n     * The state is ready.\n     */\n    stateReady() {\n        this.dragdrop = new DragDrop(this);\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        // The draggable element must be unregistered.\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Validate draggable data.\n     *\n     * @param {HTMLElement} dropdata Drop element.\n     * @returns {boolean} if the data is valid for this drop-zone.\n     */\n    validateDropData(dropdata) {\n        // Do not allow element drop to itself.\n        if (this.element.id == dropdata.id) {\n            this.element.classList.remove('drop-zone');\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n\n\n    /**\n     * Executed when a valid dropdata is dropped over the drop-zone.\n     *\n     * @param {HTMLElement} dropdata Drop element.\n     */\n    drop(dropdata) {\n        let dropZoneNode = this.element;\n        // If the dropzone is a section. We will drop the first question of the page.\n        if (this.element.classList.contains('section')) {\n            dropZoneNode = this.element.querySelector(Selectors.QUESTION);\n        }\n        // If the dropzone is a page title. We will drop the first question of the page.\n        if (this.element.classList.contains('page')) {\n            dropZoneNode = this.element.parentNode.querySelector(Selectors.QUESTION);\n        }\n        this.reactive.dispatch('moveQuestion', dropdata, dropZoneNode);\n\n    }\n\n    /**\n     * Optional method to show some visual hints to the user.\n     */\n    showDropZone() {\n        this.element.classList.add('drop-zone');\n    }\n\n    /**\n     * Optional method to remove visual hints to the user.\n     */\n    hideDropZone() {\n        this.element.classList.remove('drop-zone');\n    }\n}"],"names":["BaseComponent","stateReady","dragdrop","DragDrop","this","destroy","undefined","unregister","validateDropData","dropdata","element","id","classList","remove","drop","dropZoneNode","contains","querySelector","Selectors","QUESTION","parentNode","reactive","dispatch","showDropZone","add","hideDropZone"],"mappings":"oTAG6BA,wBAIzBC,kBACSC,SAAW,IAAIC,mBAASC,MAMjCC,eAE0BC,IAAlBF,KAAKF,eACAA,SAASK,aAUtBC,iBAAiBC,iBAETL,KAAKM,QAAQC,IAAMF,SAASE,UACvBD,QAAQE,UAAUC,OAAO,cACvB,GAafC,KAAKL,cACGM,aAAeX,KAAKM,QAEpBN,KAAKM,QAAQE,UAAUI,SAAS,aAChCD,aAAeX,KAAKM,QAAQO,cAAcC,mBAAUC,WAGpDf,KAAKM,QAAQE,UAAUI,SAAS,UAChCD,aAAeX,KAAKM,QAAQU,WAAWH,cAAcC,mBAAUC,gBAE9DE,SAASC,SAAS,eAAgBb,SAAUM,cAOrDQ,oBACSb,QAAQE,UAAUY,IAAI,aAM/BC,oBACSf,QAAQE,UAAUC,OAAO"}